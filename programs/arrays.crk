Program{

	//Three cases, variable on : (1)stack, (2)local memory, (3)shared memory
	//Also: declared and initialized

	//elements placed on the shared heap, arrA stored on local heap
    int[] arrA = [2,4,6,8]; 

	//elements placed on the shared heap, and arrGlob too
    global int[] arrGlob = [21,22,23,24]; 
   
   //Test arrays as params
    func int printArray(int[] array, int length){
    	int i = 0;
   		while(i<length){
    		print(array[i]);
    		i = i + 1;
    	}
    	return 0;
    }

	main{
		//elements placed on the shared heap, pointers on stack//
	    int[] c = [2,6,9]; 
	    c[0] = 3;
	    
	    print("stack:");
		printArray(c, 3);
		
		print("local heap:");
		printArray(arrA, 4);

		print("shared heap:");
		printArray(arrGlob, 4);
		
		int halfSize = 6;
		int[halfSize*2] arrUninitialized; //will be initialized, just not immediatedly
		print("uninitialized");
    	int i = 0;
   		while(i<halfSize*2){
   			arrUninitialized[i] = i*4;
    		i = i + 1;
    	}
		printArray(arrUninitialized, halfSize*2);
	}
	
}
