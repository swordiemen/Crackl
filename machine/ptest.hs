import Sprockell.Sprockell
import Sprockell.System
import Sprockell.TypesEtc

prog :: [Instruction]
prog = [ 
	Push Zero,
	Push Zero,
	Push Zero,
	Const 0 RegE,
	Store RegE (Addr 0),
	Const 2 RegE,
	Store RegE (Addr 4),
	Const 0 RegE,
	Store RegE (Addr 8),
	Const 1 RegE,
	Load (Addr 8) RegD,
	Compute Add RegD RegE RegD,
	Branch RegD (Abs 18),
	Const 3 RegE,
	Store RegE (Addr 0),
	Const 8 RegE,
	Store RegE (Addr 4),
	Jump (Abs 22),
	Const 2 RegE,
	Store RegE (Addr 0),
	Const 5 RegE,
	Store RegE (Addr 4),
	Const 0 RegD,
	Compute Equal RegD Zero RegD,
	Branch RegD (Abs 30),
	Push Zero,
	Const 8 RegE,
	Store RegE (Addr 12),
	Load (Addr 12) RegE,
	Const 48 RegC,
	Compute Add RegE RegC RegE,
	Write RegE (Addr 16777216),
	Const 1 RegD,
	Compute Equal RegD Zero RegD,
	Branch RegD (Abs 40),
	Push Zero,
	Const 4 RegE,
	Store RegE (Addr 12),
	Load (Addr 12) RegE,
	Const 48 RegC,
	Compute Add RegE RegC RegE,
	Write RegE (Addr 16777216),
	Load (Addr 0) RegD,
	Const 48 RegE,
	Compute Add RegD RegE RegD,
	Write RegD (Addr 16777216),
	Load (Addr 4) RegD,
	Const 48 RegE,
	Compute Add RegD RegE RegD,
	Write RegD (Addr 16777216),
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	Nop,
	EndProg	]
main = run 1 prog