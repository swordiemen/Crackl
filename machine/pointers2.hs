import Sprockell.Sprockell
import Sprockell.System
import Sprockell.TypesEtc

prog :: [Instruction]
prog = [ 
	Read (Addr 8096),
	Receive RegE,
	Const 1 RegD,
	Compute Add RegD RegE RegE,
	Write RegE (Addr 8096),
	Const 0 RegE,
	Write RegE (Addr 1152),
	Push Zero,
	Const 0 RegE,
	Const 0 RegD,
	Compute Add SP RegD RegD,
	Store RegE (Deref (RegD)),
	Read (Addr 1151),
	Receive RegE,
	TestAndSet (Deref (RegE)),
	Receive RegD,
	Compute Equal Zero RegD RegD,
	Branch RegD (Abs 14),
	Const 0 RegE,
	Compute Add SP RegE RegE,
	Load (Deref (RegE)) RegD,
	Const 2 RegE,
	Compute Lt RegD RegE RegD,
	Compute Equal RegD Zero RegD,
	Branch RegD (Abs 41),
	Read (Addr 1152),
	Receive RegD,
	Const 1 RegE,
	Compute Add RegD RegE RegE,
	Write RegE (Addr 1152),
	Const 0 RegD,
	Compute Add SP RegD RegD,
	Load (Deref (RegD)) RegE,
	Const 1 RegD,
	Compute Add RegE RegD RegD,
	Const 0 RegE,
	Compute Add SP RegE RegE,
	Store RegD (Deref (RegE)),
	Const 0 RegD,
	Compute Add SP RegD SP,
	Jump (Abs 18),
	Read (Addr 8096),
	Receive RegD,
	Const 1 RegE,
	Const 72 RegC,
	Write RegC (Deref (RegD)),
	Compute Add RegE RegD RegD,
	Const 79 RegC,
	Write RegC (Deref (RegD)),
	Compute Add RegE RegD RegD,
	Const 73 RegC,
	Write RegC (Deref (RegD)),
	Compute Add RegE RegD RegD,
	Const 36 RegC,
	Write RegC (Deref (RegD)),
	Compute Add RegE RegD RegD,
	Write RegD (Addr 8096),
	Const 4 RegE,
	Compute Sub RegD RegE RegD,
	Const 36 RegB,
	Read (Deref (RegD)),
	Receive RegE,
	Compute Equal RegE RegB RegC,
	Branch RegC (Abs 68),
	Write RegE (Addr 16777216),
	Const 1 RegC,
	Compute Add RegD RegC RegD,
	Jump (Abs 59),
	Const 10 RegB,
	Write RegB (Addr 16777216),
	Read (Addr 1152),
	Receive RegB,
	Const 10 RegA,
	Const 1 RegE,
	Compute Div RegB RegE RegC,
	Compute GtE RegC RegA RegD,
	Compute Mul RegE RegA RegE,
	Branch RegD (Abs 74),
	Const 48 RegD,
	Const 10 RegA,
	Compute Div RegE RegA RegE,
	Compute Div RegB RegE RegC,
	Compute Mod RegC RegA RegC,
	Compute Add RegC RegD RegC,
	Write RegC (Addr 16777216),
	Compute GtE RegE RegA RegA,
	Branch RegA (Abs 79),
	Const 10 RegD,
	Write RegD (Addr 16777216),
	Read (Addr 1151),
	Receive RegD,
	Write Zero (Deref (RegD)),
	Const 1 RegD,
	Compute Add SP RegD SP,
	EndProg,
	Const 0 RegD,
	Write Zero (Deref (RegD)),
	Write RegD (Addr 1151),
	Const 0 RegD,
	Write RegD (Addr 1152),
	EndProg	]
main = run 20 prog